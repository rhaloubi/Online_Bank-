@page "/profile"
@inject NavigationManager Navigation
@inject OnlineBank_FE.Services.AuthService AuthService
@inject OnlineBank_FE.Services.ClientService ClientService
@using OnlineBank_FE.Models


<div class="relative">
    <!-- Trigger Button -->
    <button class="border border-gray-300 px-4 py-2 rounded-md text-gray-700 hover:bg-gray-100"
            @onclick="OpenDialog">
        Edit Profile
    </button>
    @if (isLoading)
        {
        <p class="text-white">Loading...</p>
        }
        else if (errorMessage != null)
        {
        <p class="text-red-500">@errorMessage</p>
        }
        else if (client == null)
        {
        <p class="text-red-500">Failed to load account or client details. Please try again later.</p>
        }
        else
        {

        <!-- Dialog Modal -->
        @if (IsDialogOpen)
            {
            <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
                <div class="bg-white rounded-lg shadow-md p-6 w-full max-w-lg">
                    <!-- Dialog Header -->
                    <div class="mb-4">
                        <h2 class="text-lg font-semibold">Edit Profile</h2>
                        <p class="text-sm text-gray-600">
                            Make changes to your profile here. Click save when you're done.
                        </p>
                    </div>

                    <!-- Dialog Content -->
                    <div class="grid gap-4">
                        <!-- Name Field -->
                        <div class="grid grid-cols-4 items-center gap-4">
                            <label for="name" class="text-right text-sm font-medium text-gray-600">
                                Name
                            </label>
                            <input id="name"
                                   type="text"
                                   @bind="client.Name"
                                   class="col-span-3 border border-gray-300 rounded-md px-3 py-2 text-gray-700 focus:outline-none focus:ring focus:ring-indigo-300" />
                        </div>

                        <!-- Username Field -->
                        <div class="grid grid-cols-4 items-center gap-4">
                            <label for="username" class="text-right text-sm font-medium text-gray-600">
                                Username
                            </label>
                            <input id="username"
                                   type="text"
                                   @bind="client.Email"
                                   class="col-span-3 border border-gray-300 rounded-md px-3 py-2 text-gray-700 focus:outline-none focus:ring focus:ring-indigo-300" />
                        </div>
                    </div>

                    <!-- Dialog Footer -->
                    <div class="mt-6 flex justify-end gap-2">
                        <button class="px-4 py-2 text-sm font-medium text-gray-700 border border-gray-300 rounded-md hover:bg-gray-100"
                                @onclick="CloseDialog">
                            Cancel
                        </button>
                        <button class="px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-md hover:bg-indigo-700">
                            Save changes
                        </button>
                    </div>
                </div>
            </div>
            }
        }
    </div>

@code {
    // State variables
    private bool IsDialogOpen { get; set; } = false;
    private Client? client;
    private string? errorMessage;
    private bool isLoading = true;



    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (!await AuthService.IsLoggedInAsync())
            {
                Navigation.NavigateTo("/login");
                return;
            }

            await AuthService.InitializeAuth(); // Ensure token is set on refresh

            client = await ClientService.GetClientDetailsAsync();

            if (client == null)
            {
                errorMessage = "Failed to load client or account details.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    // Methods to handle dialog state
    private void OpenDialog()
    {
        IsDialogOpen = true;
    }

    private void CloseDialog()
    {
        IsDialogOpen = false;
    }


}
